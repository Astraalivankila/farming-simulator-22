name: Deploy to Cloudflare R2

on:
  push:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code with Git LFS
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history including LFS files
          lfs: true       # Ensure LFS files are checked out

      - name: Install zip and rclone
        run: |
          sudo apt-get update
          sudo apt-get install -y zip rclone git-lfs

      - name: Generate timestamp
        id: timestamp
        run: echo "::set-output name=timestamp::$(date +'%Y%m%d%H%M%S')"

      - name: Set zip file name
        run: |
          echo "Setting zip file name..."
          ZIP_FILE=BARNHEIM-${{ steps.timestamp.outputs.timestamp }}.zip
          echo "::set-output name=zip_file::$ZIP_FILE"

      - name: Zip repository
        run: |
          echo "Zipping the repository, excluding .git and hidden files/folders..."
          zip -r ${{ steps.zip_file }} . -x ".*" -x ".*/**" -x ".git/**"

      - name: Configure rclone
        run: |
          echo -e "[r2]\ntype = s3\nprovider = Cloudflare\naccess_key_id = ${{ secrets.R2_ACCESS_KEY_ID }}\nsecret_access_key = ${{ secrets.R2_SECRET_ACCESS_KEY }}\nendpoint = ${{ secrets.R2_ENDPOINT }}\nno_check_bucket = true" > /tmp/rclone.conf

      - name: Test rclone configuration
        run: |
          echo "Testing rclone configuration..."
          rclone lsd r2:${{ secrets.R2_BUCKET }} --config /tmp/rclone.conf || echo "Listing directories failed as expected due to no_check_bucket"

      - name: Upload to Cloudflare R2
        run: |
          rclone copy ${{ steps.zip_file }} r2:${{ secrets.R2_BUCKET }} --config /tmp/rclone.conf

      - name: Construct download URL
        run: |
          DOWNLOAD_URL="${{ secrets.DOWNLOAD_URL }}/${{ steps.zip_file }}"
          echo "Download URL: $DOWNLOAD_URL"

      - name: Post to Discord
        run: |
          echo "Posting to Discord..."
          curl -H "Content-Type: application/json" -d "{\"content\": \"New release available: $DOWNLOAD_URL\"}" ${{ secrets.DISCORD_WEBHOOK_URL }}
